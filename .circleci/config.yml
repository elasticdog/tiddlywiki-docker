---

defaults: &defaults
  working_directory: /tmp/workspace
  docker:
    - image: docker:stable-git

version: 2

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache --no-progress make
      - run:
          name: Build Docker image
          command: |
            make build
            docker save tiddlywiki | gzip -c > tiddlywiki.tar.gz
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - tiddlywiki.tar.gz

  test:
    <<: *defaults
    environment:
      GOSS_FILES_STRATEGY: cp
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run: docker load --input tiddlywiki.tar.gz
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache --no-progress bash curl make
            curl -fsSL https://goss.rocks/install | sh
      - run:
          name: Test Docker image
          command: |
            make test
      - run:
          name: Generate detailed test results
          environment:
            GOSS_OPTS: --format junit
          command: |
            mkdir -p test-results/junit
            make --silent test | sed -n '/<?xml/,$p' > test-results/junit/results.xml
          when: on_fail
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  deploy:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run: docker load --input tiddlywiki.tar.gz
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache --no-progress make
      - run:
          name: Tag Docker image
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            make deploy

workflows:
  version: 2
  build:
    jobs:
      - build

      - test:
          requires:
            - build

      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
